{"version":3,"file":"static/js/232.4e72e3b5.chunk.js","mappings":"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","sources":["components/ProtectedRoute/ProtectedRoute.style.tsx","components/ProtectedRoute/ProtectedRoute.tsx","hooks/useCreateProject.ts","hooks/useGetAllProjects.ts","hooks/useEditProject.ts","components/ProjectCards/ProjectCards.style.tsx","components/ProjectCards/ProjectCards.tsx","components/SearchBar/SearchBar.style.tsx","components/SearchBar/SearchBar.tsx","pages/ProjectsPage/ProjectsPage.style.tsx","pages/ProjectsPage/ProjectsPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Container = styled.main`\n  padding: 20px 15px;\n  margin: 0 auto;\n  width: 60vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    width: 85vw;\n  }\n\n  @media (max-width: 360px) {\n    width: 95vw;\n  }\n`;\n\nconst ProtectedTitle = styled.h3`\n  font-family: ${(props) => props.theme.fonts.text};\n  font-size: ${(props) => props.theme.fontSizes.h3};\n\n  @media (max-width: 500px) {\n    font-size: ${(props) => props.theme.fontSizes.h4};\n  }\n`;\n\nexport { Container, ProtectedTitle };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useAppSelector } from 'hooks/useRedux';\n\nimport { getLoggedIn } from 'redux/selectors/userSelectors';\n\nimport { Container, ProtectedTitle } from './ProtectedRoute.style';\n\ninterface ProtectedProps {\n  children: JSX.Element;\n}\n\nfunction ProtectedRoute({ children }: ProtectedProps) {\n  const { t } = useTranslation('translation', { keyPrefix: 'protected' });\n  const isLoggedIn = useAppSelector(getLoggedIn);\n\n  if (!isLoggedIn) {\n    return (\n      <Container>\n        <ProtectedTitle>{t('text')}</ProtectedTitle>\n      </Container>\n    );\n  }\n  return children;\n}\n\nexport default ProtectedRoute;\n","import { useCallback, useEffect } from 'react';\nimport { SubmitHandler } from 'react-hook-form';\n\nimport { EditFormValues } from 'ts/interfaces';\n\nimport { useCreateProjectMutation } from 'redux/api/projectsApiSlice';\nimport { getUser } from 'redux/selectors/userSelectors';\nimport { getCreateProjectPopupOpen } from 'redux/selectors/projectSelectors';\nimport { setCreateProjectPopupOpen } from 'redux/slices/projectSlice';\n\nimport { useAppDispatch, useAppSelector } from './useRedux';\n\nconst useCreateProject = () => {\n  const isCreateProjectPopupOpen = useAppSelector(getCreateProjectPopupOpen);\n  const dispatch = useAppDispatch();\n  const [\n    createProject,\n    { isLoading: isLoadingCreateProject, isSuccess: isSuccessCreateProject },\n  ] = useCreateProjectMutation();\n  const user = useAppSelector(getUser);\n\n  const onSubmit: SubmitHandler<EditFormValues> = useCallback(\n    async ({ color, responsibleUser, ...formValues }) => {\n      await createProject({\n        title: JSON.stringify({ ...formValues }),\n        owner: user?.name ?? '',\n        users: [],\n      });\n    },\n    [isCreateProjectPopupOpen]\n  );\n\n  useEffect(\n    () => () => {\n      if (isCreateProjectPopupOpen) {\n        dispatch(setCreateProjectPopupOpen(false));\n      }\n    },\n    []\n  );\n\n  return {\n    isSuccessCreateProject,\n    isCreateProjectPopupOpen,\n    isLoadingCreateProject,\n    onSubmit,\n  };\n};\n\nexport default useCreateProject;\n","import { useGetAllProjectsQuery } from 'redux/api/projectsApiSlice';\nimport { getLoggedIn } from 'redux/selectors/userSelectors';\n\nimport { useAppSelector } from './useRedux';\n\nconst useGetAllProject = () => {\n  const isLoggedIn = useAppSelector(getLoggedIn);\n  const { data: projects, isFetching: isProjectsListLoading } = useGetAllProjectsQuery(\n    undefined,\n    { skip: !isLoggedIn }\n  );\n\n  return {\n    projects,\n    isProjectsListLoading,\n  };\n};\n\nexport default useGetAllProject;\n","import { useCallback, useEffect } from 'react';\nimport { SubmitHandler } from 'react-hook-form';\n\nimport { useUpdateProjectMutation } from 'redux/api/projectsApiSlice';\nimport { getEditProjectPopupOpen } from 'redux/selectors/projectSelectors';\nimport { setEditProjectPopupOpen, setSelectedProject } from 'redux/slices/projectSlice';\n\nimport { EditFormValues, Project } from 'ts/interfaces';\n\nimport { useAppDispatch, useAppSelector } from './useRedux';\n\nconst useEditProject = (selectedProject: Project | null) => {\n  const isEditProjectPopupOpen = useAppSelector(getEditProjectPopupOpen);\n  const dispatch = useAppDispatch();\n  const [editProject, { isLoading: isLoadingEditProject }] = useUpdateProjectMutation();\n\n  const editOnSubmit: SubmitHandler<EditFormValues> = useCallback(\n    async ({ color, ...formValues }) => {\n      if (selectedProject) {\n        const { description, responsibleUser, ...projectData } = selectedProject;\n        await editProject({\n          ...projectData,\n          title: JSON.stringify({\n            title: formValues.title,\n            description: formValues.description,\n          }),\n        });\n      }\n    },\n    [isEditProjectPopupOpen]\n  );\n\n  useEffect(\n    () => () => {\n      if (isEditProjectPopupOpen) {\n        dispatch(setEditProjectPopupOpen(false));\n        dispatch(setSelectedProject(null));\n      }\n    },\n    []\n  );\n\n  return {\n    isEditProjectPopupOpen,\n    isLoadingEditProject,\n    editOnSubmit,\n  };\n};\n\nexport default useEditProject;\n","import styled from 'styled-components';\nimport { StyledLink } from 'styles/styles';\n\nconst CardsWrapper = styled.div`\n  padding: 20px;\n  width: 100%;\n  height: 100%;\n  gap: 25px;\n  background-color: ${({ theme }) => theme.colors.backgroundGrey};\n  border-radius: 10px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 300px);\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n  justify-content: space-around;\n\n  ${StyledLink} {\n    max-width: 300px;\n    width: 100%;\n    height: 100%;\n    display: flex;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  @media (max-width: 380px) {\n    grid-template-columns: repeat(auto-fill, 260px);\n\n    ${StyledLink} {\n      max-width: 260px;\n    }\n  }\n`;\n\nconst Card = styled.div`\n  width: 100%;\n  min-height: 185px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.colors.backgroundWhite};\n  padding: 20px;\n  border-radius: 10px;\n  border-left: 5px solid ${({ theme }) => theme.colors.primaryColor};\n  box-shadow: 0px 10px 13px rgba(0, 0, 0, 0.02);\n  transition: ${({ theme }) => theme.effects.transition};\n  text-align: left;\n  gap: 10px;\n  overflow: hidden;\n\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.05);\n    opacity: 1;\n    box-shadow: 0px 10px 13px rgba(0, 0, 0, 0.07);\n  }\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst CardButtonWrapper = styled.div`\n  display: flex;\n  gap: 5px;\n\n  button {\n    padding: 0;\n  }\n`;\n\nconst CardButton = styled.button.attrs({\n  type: 'button',\n})`\n  border: none;\n  outline: none;\n  background-color: ${({ theme }) => theme.colors.transparent};\n  cursor: pointer;\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:active {\n    opacity: ${({ theme }) => theme.effects.activeOpacity};\n  }\n`;\n\nconst IconWrapper = styled.div`\n  width: 25px;\n  height: 25px;\n`;\n\nconst CardTitle = styled.h5`\n  font-size: ${({ theme }) => theme.fontSizes.h5};\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-weight: ${({ theme }) => theme.fontsWeight.bold};\n  width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst CardDescriptionWrapper = styled.div`\n  display: flex;\n`;\n\nconst CardDescription = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  word-wrap: break-word;\n  overflow: hidden;\n`;\n\nconst CardOwnerWrapper = styled.div`\n  font-size: ${({ theme }) => theme.fontSizes.smallNoteText};\n  word-break: break-word;\n  overflow: hidden;\n`;\n\nconst CardOwner = styled.p`\n  font-style: italic;\n  color: ${({ theme }) => theme.colors.grey};\n`;\n\nconst CardOwnerName = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.colors.backgroundGrey};\n  padding: 0 7px 0 5px;\n  border-radius: 3px;\n  color: ${({ theme }) => theme.colors.primaryColor};\n`;\n\nexport {\n  CardsWrapper,\n  Card,\n  CardHeader,\n  CardButtonWrapper,\n  CardButton,\n  CardTitle,\n  CardDescriptionWrapper,\n  CardDescription,\n  IconWrapper,\n  CardOwnerWrapper,\n  CardOwner,\n  CardOwnerName,\n};\n","import React, { memo, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useAppDispatch } from 'hooks/useRedux';\n\nimport {\n  setSelectedProject,\n  setDeleteProjectPopupOpen,\n  setEditProjectPopupOpen,\n} from 'redux/slices/projectSlice';\n\nimport { Project } from 'ts/interfaces';\n\nimport { StyledDeleteIcon, StyledEditIcon, StyledLink } from 'styles/styles';\nimport defaultTheme from 'styles/theme';\nimport {\n  Card,\n  CardButton,\n  CardButtonWrapper,\n  CardDescription,\n  CardDescriptionWrapper,\n  CardHeader,\n  CardsWrapper,\n  CardTitle,\n  IconWrapper,\n  CardOwnerWrapper,\n  CardOwner,\n  CardOwnerName,\n} from './ProjectCards.style';\n\ninterface ProjectCardsProps {\n  projects: Project[];\n}\n\nfunction ProjectCards({ projects }: ProjectCardsProps) {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation('translation', { keyPrefix: 'projects' });\n\n  const deleteProjectOnClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent>, project: Project) => {\n      event.preventDefault();\n      dispatch(setSelectedProject(project));\n      dispatch(setDeleteProjectPopupOpen(true));\n    },\n    []\n  );\n\n  const editProjectOnClick = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent>, project: Project) => {\n      event.preventDefault();\n      dispatch(setSelectedProject(project));\n      dispatch(setEditProjectPopupOpen(true));\n    },\n    []\n  );\n\n  return (\n    <CardsWrapper>\n      {projects.map((project) => (\n        <StyledLink key={project._id} to={`/projects/${project._id}`}>\n          <Card>\n            <CardHeader>\n              <CardTitle>{project.title}</CardTitle>\n              <CardButtonWrapper>\n                <CardButton onClick={(event) => editProjectOnClick(event, project)}>\n                  <IconWrapper>\n                    <StyledEditIcon />\n                  </IconWrapper>\n                </CardButton>\n                <CardButton onClick={(event) => deleteProjectOnClick(event, project)}>\n                  <IconWrapper>\n                    <StyledDeleteIcon $color={defaultTheme.colors.pink} />\n                  </IconWrapper>\n                </CardButton>\n              </CardButtonWrapper>\n            </CardHeader>\n            <CardDescriptionWrapper>\n              <CardDescription>{project.description}</CardDescription>\n            </CardDescriptionWrapper>\n            <CardOwnerWrapper>\n              <CardOwner>\n                {t('projectOwner')} <CardOwnerName>{project.owner}</CardOwnerName>\n              </CardOwner>\n            </CardOwnerWrapper>\n          </Card>\n        </StyledLink>\n      ))}\n    </CardsWrapper>\n  );\n}\n\nexport default memo(ProjectCards);\n","import styled from 'styled-components';\n\nconst SearchBarWrapper = styled.div`\n  width: 50%;\n  margin-left: 16px;\n\n  @media (max-width: 600px) {\n    order: 1;\n    width: 100%;\n    margin: 20px 0 0;\n  }\n\n  Form {\n    flex-direction: row;\n    gap: 3px;\n    padding: 0;\n\n    span {\n      display: none;\n    }\n  }\n\n  Input {\n    margin-top: 5px;\n\n    & ~ label {\n      top: 6px;\n    }\n\n    &:focus ~ label,\n    &:disabled ~ label {\n      transform: none;\n      font-size: ${({ theme }) => theme.fontSizes.text};\n      color: ${({ theme }) => theme.colors.grey};\n    }\n\n    &:valid ~ label {\n      display: none;\n    }\n\n    &::-webkit-search-cancel-button {\n      display: none;\n    }\n  }\n\n  Button {\n    padding: 10px;\n    background-color: ${({ theme }) => theme.colors.transparent};\n    color: ${({ theme }) => theme.colors.primaryColor};\n\n    svg {\n      transform: scale(2);\n    }\n  }\n`;\n\nexport default SearchBarWrapper;\n","import React, { memo, useEffect } from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\n\nimport { useAppDispatch } from 'hooks/useRedux';\nimport { setSearchedProjects } from 'redux/slices/projectSlice';\n\nimport { Project, SearchBarValues } from 'ts/interfaces';\nimport { defaultSearchBarValues } from 'utils/constants';\n\nimport { IoMdClose, IoMdSearch } from 'react-icons/io';\n\nimport Input from 'components/Input/Input';\nimport Button from 'components/Button/Button';\n\nimport { Form } from 'styles/styles';\nimport SearchBarWrapper from './SearchBar.style';\n\ninterface SearchBarProps {\n  defaultProjects: Project[] | undefined;\n  isDefaultProjectsLoading: boolean;\n}\n\nfunction SearchBar({ defaultProjects, isDefaultProjectsLoading }: SearchBarProps) {\n  const { t } = useTranslation('translation');\n  const dispatch = useAppDispatch();\n  const { register, handleSubmit, clearErrors, reset, setValue } =\n    useForm<SearchBarValues>({\n      mode: 'onSubmit',\n      reValidateMode: 'onSubmit',\n      defaultValues: defaultSearchBarValues,\n    });\n\n  const onSearchSubmit: SubmitHandler<SearchBarValues> = (formValues) => {\n    if (defaultProjects) {\n      const newProjectsList = defaultProjects?.filter((project) =>\n        project.title.toLowerCase().includes(formValues.title.toLowerCase())\n      );\n      dispatch(setSearchedProjects(newProjectsList));\n      localStorage.setItem('searchedProjectsData', formValues.title);\n    }\n  };\n\n  const resetOnClick = () => {\n    localStorage.removeItem('searchedProjectsData');\n    reset();\n  };\n\n  useEffect(() => {\n    if (!isDefaultProjectsLoading && defaultProjects) {\n      dispatch(setSearchedProjects(defaultProjects));\n    }\n\n    const dataFromLocalStorage = localStorage.getItem('searchedProjectsData');\n    if (dataFromLocalStorage) {\n      setValue('title', dataFromLocalStorage);\n      onSearchSubmit({ title: dataFromLocalStorage });\n    } else {\n      reset();\n    }\n  }, [defaultProjects]);\n\n  return (\n    <SearchBarWrapper>\n      <Form\n        aria-label=\"form\"\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit(onSearchSubmit)}\n      >\n        <Input\n          type=\"search\"\n          name=\"title\"\n          register={register}\n          clearErrors={clearErrors}\n          placeholderText={t('searchBar.placeholder')}\n        />\n        <Button type=\"submit\" width=\"30px\">\n          <IoMdSearch />\n        </Button>\n        <Button type=\"submit\" width=\"30px\" callback={resetOnClick}>\n          <IoMdClose />\n        </Button>\n      </Form>\n    </SearchBarWrapper>\n  );\n}\n\nexport default memo(SearchBar);\n","import styled from 'styled-components';\n\nconst ProjectsControls = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 15px;\n\n  @media (max-width: 600px) {\n    flex-wrap: wrap;\n  }\n\n  Button {\n    margin-top: 6px;\n  }\n`;\n\nconst ProjectsTitle = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.title};\n  font-weight: ${({ theme }) => theme.fontsWeight.medium};\n  font-size: ${({ theme }) => theme.fontSizes.h2};\n  color: ${({ theme }) => theme.colors.title};\n\n  @media (max-width: 600px) {\n    font-size: ${({ theme }) => theme.fontSizes.h3};\n  }\n`;\n\nconst ProjectsContainer = styled.section`\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  width: 100%;\n  height: 100%;\n  gap: 25px;\n  background-color: ${({ theme }) => theme.colors.backgroundGrey};\n  border-radius: 10px;\n`;\n\nexport { ProjectsControls, ProjectsTitle, ProjectsContainer };\n","import React, { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useAppDispatch, useAppSelector } from 'hooks/useRedux';\nimport useDeleteProject from 'hooks/useDeleteProject';\nimport useCreateProject from 'hooks/useCreateProject';\nimport useGetAllProject from 'hooks/useGetAllProjects';\nimport useEditProject from 'hooks/useEditProject';\n\nimport {\n  setCreateProjectPopupOpen,\n  setDeleteProjectPopupOpen,\n  setEditProjectPopupOpen,\n  setSelectedProject,\n} from 'redux/slices/projectSlice';\nimport {\n  getSearchedProjects,\n  getSelectedProject,\n} from 'redux/selectors/projectSelectors';\n\nimport ProtectedRoute from 'components/ProtectedRoute/ProtectedRoute';\nimport Button from 'components/Button/Button';\nimport Loader from 'components/Loader/Loader';\nimport NoResultsContainer from 'components/NoResultsContainer/NoResultsContainer';\nimport ProjectCards from 'components/ProjectCards/ProjectCards';\nimport PopupWarning from 'components/PopupWarning/PopupWarning';\nimport PopupWithForm from 'components/PopupWithForm/PopupWithForm';\nimport SearchBar from 'components/SearchBar/SearchBar';\n\nimport defaultTheme from 'styles/theme';\nimport { MainWrapper } from 'styles/styles';\nimport { ProjectsControls, ProjectsTitle, ProjectsContainer } from './ProjectsPage.style';\n\nfunction ProjectsPage() {\n  const selectedProject = useAppSelector(getSelectedProject);\n  const { t } = useTranslation('translation', { keyPrefix: 'projectsPage' });\n  const dispatch = useAppDispatch();\n  const { projects, isProjectsListLoading } = useGetAllProject();\n  const { isDeleteProjectPopupOpen, isLoadingDeleteProject, deleteProject } =\n    useDeleteProject(selectedProject);\n  const { isEditProjectPopupOpen, isLoadingEditProject, editOnSubmit } =\n    useEditProject(selectedProject);\n  const { isCreateProjectPopupOpen, isLoadingCreateProject, onSubmit } =\n    useCreateProject();\n  const isLoadingProjectsPage = [\n    isProjectsListLoading,\n    isLoadingCreateProject,\n    isLoadingEditProject,\n    isLoadingDeleteProject,\n  ].some((loader) => loader);\n\n  const searchedProjects = useAppSelector(getSearchedProjects);\n\n  return (\n    <ProtectedRoute>\n      <MainWrapper>\n        <ProjectsControls>\n          <ProjectsTitle>{t('title')}</ProjectsTitle>\n          <SearchBar\n            defaultProjects={projects}\n            isDefaultProjectsLoading={isProjectsListLoading}\n          />\n          <Button\n            type=\"button\"\n            width=\"130px\"\n            backgroundColor={defaultTheme.colors.transparent}\n            color={defaultTheme.colors.primaryColor}\n            callback={() => dispatch(setCreateProjectPopupOpen(true))}\n          >\n            {t('newProjectButton')}\n          </Button>\n        </ProjectsControls>\n        <ProjectsContainer>\n          {searchedProjects?.length ? (\n            <ProjectCards projects={searchedProjects} />\n          ) : (\n            <NoResultsContainer\n              text=\"projectsPage.emptyContainerText\"\n              buttonText=\"projectsPage.emptyContainerButton\"\n              setPopupShown={setCreateProjectPopupOpen}\n            />\n          )}\n        </ProjectsContainer>\n        <PopupWarning\n          isPopupShown={isDeleteProjectPopupOpen}\n          setPopupShown={setDeleteProjectPopupOpen}\n          actionOnYes={deleteProject}\n          text=\"deleteProject\"\n        />\n        <PopupWithForm\n          isPopupShown={isCreateProjectPopupOpen}\n          setPopupShown={setCreateProjectPopupOpen}\n          keyPrefix=\"editProjectForm\"\n          formTitleText=\"newProjectTitle\"\n          onSubmit={onSubmit}\n          maxDescriptionLength={80}\n        />\n        <PopupWithForm\n          isPopupShown={isEditProjectPopupOpen}\n          setPopupShown={setEditProjectPopupOpen}\n          keyPrefix=\"editProjectForm\"\n          formTitleText=\"editTitle\"\n          selectedItem={selectedProject}\n          onSubmit={editOnSubmit}\n          setSelectedItem={setSelectedProject}\n          maxDescriptionLength={80}\n        />\n        {isLoadingProjectsPage && <Loader />}\n      </MainWrapper>\n    </ProtectedRoute>\n  );\n}\n\nexport default memo(ProjectsPage);\n"],"names":["Container","styled","ProtectedTitle","props","theme","fonts","text","fontSizes","h3","h4","children","t","useTranslation","keyPrefix","useAppSelector","getLoggedIn","isCreateProjectPopupOpen","getCreateProjectPopupOpen","dispatch","useAppDispatch","useCreateProjectMutation","createProject","isLoadingCreateProject","isLoading","isSuccessCreateProject","isSuccess","user","getUser","onSubmit","useCallback","color","responsibleUser","formValues","title","JSON","stringify","owner","name","users","useEffect","setCreateProjectPopupOpen","isLoggedIn","useGetAllProjectsQuery","undefined","skip","projects","data","isProjectsListLoading","isFetching","selectedProject","isEditProjectPopupOpen","getEditProjectPopupOpen","useUpdateProjectMutation","editProject","isLoadingEditProject","editOnSubmit","description","projectData","setEditProjectPopupOpen","setSelectedProject","CardsWrapper","colors","backgroundGrey","StyledLink","Card","backgroundWhite","primaryColor","effects","transition","CardHeader","CardButtonWrapper","CardButton","type","transparent","hoverOpacity","activeOpacity","IconWrapper","CardTitle","h5","fontsWeight","bold","CardDescriptionWrapper","CardDescription","CardOwnerWrapper","smallNoteText","CardOwner","grey","CardOwnerName","ProjectCards","deleteProjectOnClick","event","project","preventDefault","setDeleteProjectPopupOpen","editProjectOnClick","map","to","_id","onClick","$color","defaultTheme","memo","SearchBar","defaultProjects","isDefaultProjectsLoading","useForm","mode","reValidateMode","defaultValues","defaultSearchBarValues","register","handleSubmit","clearErrors","reset","setValue","onSearchSubmit","newProjectsList","filter","toLowerCase","includes","setSearchedProjects","localStorage","setItem","dataFromLocalStorage","getItem","noValidate","autoComplete","Input","placeholderText","Button","width","callback","removeItem","ProjectsControls","ProjectsTitle","medium","h2","ProjectsContainer","ProjectsPage","getSelectedProject","useGetAllProject","useDeleteProject","isDeleteProjectPopupOpen","isLoadingDeleteProject","deleteProject","useEditProject","useCreateProject","isLoadingProjectsPage","some","loader","searchedProjects","getSearchedProjects","ProtectedRoute","backgroundColor","length","NoResultsContainer","buttonText","setPopupShown","PopupWarning","isPopupShown","actionOnYes","PopupWithForm","formTitleText","maxDescriptionLength","selectedItem","setSelectedItem","Loader"],"sourceRoot":""}