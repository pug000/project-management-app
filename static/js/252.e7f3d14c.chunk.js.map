{"version":3,"file":"static/js/252.e7f3d14c.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.tsx","components/Input/Input.style.tsx","components/Input/Input.tsx","components/ProtectedRoute/ProtectedRoute.style.tsx","components/ProtectedRoute/ProtectedRoute.tsx","hooks/useEditUser.ts","pages/EditProfilePage/EditProfilePage.tsx","styles/styles.tsx"],"sourcesContent":["import React, { memo, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\n\nimport { useAppSelector } from 'hooks/useRedux';\n\nimport { getUser } from 'redux/selectors/userSelectors';\n\nimport Button from 'components/Button/Button';\nimport Input from 'components/Input/Input';\n\nimport { defaultUserFormValues, formTextFields, nameValidation } from 'utils/constants';\n\nimport { UserFormValues } from 'ts/interfaces';\n\nimport { Form } from 'styles/styles';\n\ninterface AuthFormProps {\n  keyPrefix: string;\n  onSubmit: SubmitHandler<UserFormValues>;\n  isLoadingAuth: boolean;\n}\n\nfunction AuthForm({ keyPrefix, isLoadingAuth, onSubmit }: AuthFormProps) {\n  const location = useLocation();\n  const { t, i18n } = useTranslation('translation');\n  const user = useAppSelector(getUser);\n  const {\n    register,\n    handleSubmit,\n    clearErrors,\n    formState: { errors },\n    trigger,\n  } = useForm<UserFormValues>({\n    mode: 'onSubmit',\n    reValidateMode: 'onSubmit',\n    defaultValues: user ?? defaultUserFormValues,\n  });\n  const isFormValid = Object.values(errors).every((error) => !error?.message);\n\n  useEffect(() => {\n    if (errors) {\n      trigger([...(Object.keys(errors) as (keyof UserFormValues)[])]);\n    }\n  }, [i18n.language, errors]);\n\n  return (\n    <Form\n      aria-label=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      {location.pathname !== '/signin' && (\n        <Input<UserFormValues>\n          type=\"text\"\n          name=\"name\"\n          register={register}\n          clearErrors={clearErrors}\n          errors={errors.name}\n          placeholderText={t('authorization.name')}\n          disabled={isLoadingAuth}\n          pattern={{\n            value: nameValidation,\n            message: t('authorization.namePattern'),\n          }}\n          minLength={{\n            value: 3,\n            message: t('authorization.nameMinLength', { count: 3 }),\n          }}\n          required={t('authorization.required', { value: t('authorization.name') })}\n        />\n      )}\n      {formTextFields.slice(1).map((textfield) => (\n        <Input<UserFormValues>\n          key={textfield.id}\n          type={textfield.type}\n          name={textfield.name}\n          placeholderText={t(textfield.placeholderText)}\n          required={t(textfield.required, {\n            value: t(textfield.placeholderText),\n          })}\n          pattern={{\n            ...textfield.pattern,\n            message: t(textfield.pattern.message),\n          }}\n          minLength={{\n            ...textfield.minLength,\n            message: t(textfield.minLength.message, {\n              count: textfield.minLength.value,\n              value: t(textfield.placeholderText),\n            }),\n          }}\n          disabled={isLoadingAuth}\n          errors={errors[textfield.name]}\n          register={register}\n          clearErrors={clearErrors}\n        />\n      ))}\n      <Button type=\"submit\" disabled={isLoadingAuth || !isFormValid}>\n        {t(`${keyPrefix}.text`)}\n      </Button>\n    </Form>\n  );\n}\n\nexport default memo(AuthForm);\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  width: 100%;\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 10px;\n  outline: none;\n  border: 1px solid;\n  border-radius: 3px;\n  border-color: ${({ theme }) => theme.colors.grey};\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-weight: 400;\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.primaryColor};\n    box-shadow: 0px 10px 13px rgba(0, 0, 0, 0.07);\n  }\n\n  &:focus ~ label,\n  &:valid ~ label,\n  &:disabled ~ label {\n    transform: translateX(-10px) translateY(-32px);\n    font-size: ${({ theme }) => theme.fontSizes.smallText};\n    color: ${({ theme }) => theme.colors.text};\n  }\n`;\n\nconst PasswordButton = styled.button.attrs({\n  type: 'button',\n})`\n  position: absolute;\n  border: none;\n  outline: none;\n  background-color: ${({ theme }) => theme.colors.transparent};\n  width: 30px;\n  right: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n\n  svg {\n    width: 100%;\n    height: 100%;\n    color: ${({ theme }) => theme.colors.grey};\n  }\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: 1px;\n  left: 1px;\n  padding: 10px;\n  display: inline-block;\n  color: ${({ theme }) => theme.colors.grey};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  transition: ${({ theme }) => theme.effects.transition};\n  pointer-events: none;\n`;\n\nconst InputErrorText = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.smallNoteText};\n  color: ${({ theme }) => theme.colors.red};\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  text-align: end;\n  min-height: 16px;\n`;\n\nexport { Wrapper, InputWrapper, StyledInput, PasswordButton, Label, InputErrorText };\n","import React, { useState } from 'react';\n\nimport {\n  FieldError,\n  FieldValues,\n  Path,\n  UseFormClearErrors,\n  UseFormRegister,\n  ValidationRule,\n} from 'react-hook-form';\n\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\n\nimport {\n  InputWrapper,\n  Label,\n  StyledInput,\n  InputErrorText,\n  Wrapper,\n  PasswordButton,\n} from './Input.style';\n\ninterface InputProps<T extends FieldValues> {\n  type: string;\n  placeholderText?: string;\n  name: Path<T>;\n  minLength?: ValidationRule<number>;\n  maxLength?: ValidationRule<number>;\n  required?: string;\n  pattern?: ValidationRule<RegExp>;\n  errors?: FieldError;\n  disabled?: boolean;\n  register: UseFormRegister<T>;\n  clearErrors: UseFormClearErrors<T>;\n}\n\nfunction Input<T extends FieldValues>({\n  type,\n  placeholderText,\n  name,\n  minLength,\n  maxLength,\n  required,\n  pattern,\n  errors,\n  disabled,\n  register,\n  clearErrors,\n}: InputProps<T>) {\n  const [isPasswordShown, setPasswordShown] = useState(false);\n\n  const renderPasswordButton = () => {\n    if (name !== 'password') {\n      return null;\n    }\n\n    return (\n      <PasswordButton onClick={() => setPasswordShown((prev) => !prev)}>\n        {isPasswordShown ? <AiOutlineEyeInvisible /> : <AiOutlineEye />}\n      </PasswordButton>\n    );\n  };\n\n  const togglePasswordInputType = () => {\n    if (name !== 'password') {\n      return type;\n    }\n\n    return isPasswordShown ? 'text' : 'password';\n  };\n\n  return (\n    <Wrapper>\n      <InputWrapper>\n        <StyledInput\n          type={togglePasswordInputType()}\n          required\n          id={name}\n          disabled={disabled}\n          {...register(name, {\n            required,\n            minLength,\n            maxLength,\n            pattern,\n            onChange: () => errors && clearErrors(name),\n          })}\n        />\n        <Label>{placeholderText}</Label>\n        {renderPasswordButton()}\n      </InputWrapper>\n      <InputErrorText>{errors?.message}</InputErrorText>\n    </Wrapper>\n  );\n}\n\nInput.defaultProps = {\n  placeholderText: '',\n  errors: undefined,\n  disabled: false,\n  maxLength: undefined,\n  minLength: undefined,\n  required: undefined,\n  pattern: undefined,\n};\n\nexport default Input;\n","import styled from 'styled-components';\n\nconst Container = styled.main`\n  padding: 20px 15px;\n  margin: 0 auto;\n  width: 60vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    width: 85vw;\n  }\n\n  @media (max-width: 360px) {\n    width: 95vw;\n  }\n`;\n\nconst ProtectedTitle = styled.h3`\n  font-family: ${(props) => props.theme.fonts.text};\n  font-size: ${(props) => props.theme.fontSizes.h3};\n\n  @media (max-width: 500px) {\n    font-size: ${(props) => props.theme.fontSizes.h4};\n  }\n`;\n\nexport { Container, ProtectedTitle };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useAppSelector } from 'hooks/useRedux';\n\nimport { getLoggedIn } from 'redux/selectors/userSelectors';\n\nimport { Container, ProtectedTitle } from './ProtectedRoute.style';\n\ninterface ProtectedProps {\n  children: JSX.Element;\n}\n\nfunction ProtectedRoute({ children }: ProtectedProps) {\n  const { t } = useTranslation('translation', { keyPrefix: 'protected' });\n  const isLoggedIn = useAppSelector(getLoggedIn);\n\n  if (!isLoggedIn) {\n    return (\n      <Container>\n        <ProtectedTitle>{t('text')}</ProtectedTitle>\n      </Container>\n    );\n  }\n  return children;\n}\n\nexport default ProtectedRoute;\n","import { useCallback, useEffect } from 'react';\nimport { SubmitHandler } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useEditUserByIdMutation } from 'redux/api/userApiSlice';\nimport {\n  getAuthUser,\n  getErrorNotificationPopupOpen,\n} from 'redux/selectors/userSelectors';\nimport { setErrorNotificationPopupOpen } from 'redux/slices/userSlice';\n\nimport { UserFormValues } from 'ts/interfaces';\n\nimport { useAppSelector, useAppDispatch } from './useRedux';\n\nconst useEditUser = () => {\n  const navigate = useNavigate();\n  const authUser = useAppSelector(getAuthUser);\n  const isErrorNotificationPopupOpen = useAppSelector(getErrorNotificationPopupOpen);\n  const dispatch = useAppDispatch();\n  const [\n    editUserById,\n    {\n      isLoading: isLoadingEditUser,\n      isSuccess: isSuccessEditUser,\n      isError: isErrorEditUser,\n      error: editUserErrorMessage,\n    },\n  ] = useEditUserByIdMutation();\n\n  const onSubmit: SubmitHandler<UserFormValues> = useCallback(async (formValues) => {\n    if (authUser?._id) {\n      await editUserById({\n        id: authUser._id,\n        body: formValues,\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isErrorEditUser) {\n      dispatch(setErrorNotificationPopupOpen(true));\n    }\n  }, [isErrorEditUser]);\n\n  useEffect(() => {\n    if (isSuccessEditUser) {\n      navigate('/profile');\n    }\n  }, [isSuccessEditUser]);\n\n  useEffect(\n    () => () => {\n      if (isErrorNotificationPopupOpen) {\n        dispatch(setErrorNotificationPopupOpen(false));\n      }\n    },\n    []\n  );\n\n  return {\n    isErrorNotificationPopupOpen,\n    isLoadingEditUser,\n    editUserErrorMessage,\n    onSubmit,\n  };\n};\n\nexport default useEditUser;\n","import React, { memo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport useEditUser from 'hooks/useEditUser';\n\nimport { setErrorNotificationPopupOpen } from 'redux/slices/userSlice';\n\nimport { backButtonAnimation } from 'utils/animations';\n\nimport Button from 'components/Button/Button';\nimport ProtectedRoute from 'components/ProtectedRoute/ProtectedRoute';\nimport AuthForm from 'components/AuthForm/AuthForm';\nimport Loader from 'components/Loader/Loader';\nimport PopupNotification from 'components/PopupNotification/PopupNotification';\n\nimport defaultTheme from 'styles/theme';\nimport {\n  FormDescriptionText,\n  FormDescriptionWrapper,\n  FormHeader,\n  FormWrapper,\n  LinkWrapper,\n  MainWrapper,\n  StyledLink,\n  StyledPrevIcon,\n  Title,\n} from 'styles/styles';\n\nfunction EditProfilePage() {\n  const navigate = useNavigate();\n  const { t } = useTranslation('translation');\n  const {\n    isErrorNotificationPopupOpen,\n    isLoadingEditUser,\n    editUserErrorMessage,\n    onSubmit,\n  } = useEditUser();\n\n  return (\n    <ProtectedRoute>\n      <MainWrapper>\n        <FormWrapper>\n          <FormHeader>\n            <Button\n              type=\"button\"\n              width=\"30px\"\n              animation={backButtonAnimation}\n              backgroundColor={defaultTheme.colors.transparent}\n              disabled={false}\n              callback={() => navigate(-1)}\n            >\n              <StyledPrevIcon $isDisabled={false} />\n            </Button>\n          </FormHeader>\n          <Title>{t('profile.edit')}</Title>\n          <AuthForm\n            keyPrefix=\"profile\"\n            onSubmit={onSubmit}\n            isLoadingAuth={isLoadingEditUser}\n          />\n          <FormDescriptionWrapper>\n            <FormDescriptionText>{t('other.or')}</FormDescriptionText>\n          </FormDescriptionWrapper>\n          <LinkWrapper>\n            <StyledLink to=\"/profile\">{t('profile.back')}</StyledLink>\n          </LinkWrapper>\n        </FormWrapper>\n        {isLoadingEditUser && <Loader />}\n        {editUserErrorMessage && (\n          <PopupNotification\n            isPopupShown={isErrorNotificationPopupOpen}\n            setPopupShown={setErrorNotificationPopupOpen}\n            text={t(`${editUserErrorMessage}`)}\n            backgroundColor={defaultTheme.colors.pink}\n          />\n        )}\n      </MainWrapper>\n    </ProtectedRoute>\n  );\n}\n\nexport default memo(EditProfilePage);\n","import { GrPrevious } from 'react-icons/gr';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { StylesConfig, GroupBase } from 'react-select';\n\nimport { MdOutlineDelete, MdClose, MdEdit } from 'react-icons/md';\nimport { BiEdit } from 'react-icons/bi';\nimport { FiCheck } from 'react-icons/fi';\n\nimport { ColorProps, IconsProps, SelectOptions } from 'ts/interfaces';\n\nimport defaultTheme from './theme';\n\nconst baseIconStyles = {\n  width: '100%',\n  height: '100%',\n};\n\nconst MainWrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nconst Title = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-weight: ${({ theme }) => theme.fontsWeight.bold};\n  font-size: ${({ theme }) => theme.fontSizes.h2};\n  color: ${({ theme }) => theme.colors.title};\n  margin-bottom: 10px;\n  text-align: center;\n\n  @media (max-width: 500px) {\n    font-size: ${({ theme }) => theme.fontSizes.h4};\n  }\n`;\n\nconst FormWrapper = styled.div`\n  max-width: 450px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  background-color: ${({ theme }) => theme.colors.backgroundGrey};\n  padding: 20px;\n  border-radius: 10px;\n`;\n\nconst FormHeader = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px;\n  gap: 25px;\n  width: 100%;\n`;\n\nconst FormDescriptionWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  white-space: nowrap;\n  border: 0px;\n  gap: 10px;\n\n  &:before {\n    position: relative;\n    width: 100%;\n    border-top: thin solid rgba(0, 0, 0, 0.12);\n    content: '';\n    transform: translateY(50%);\n  }\n\n  &:after {\n    position: relative;\n    width: 100%;\n    border-top: thin solid rgba(0, 0, 0, 0.12);\n    content: '';\n    transform: translateY(50%);\n  }\n`;\n\nconst FormDescriptionText = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst LinkWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 60%;\n`;\n\nconst StyledLink = styled(Link)`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ theme }) => theme.colors.text};\n  transition: ${({ theme }) => theme.effects.transition};\n  line-height: 25px;\n  text-align: center;\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n\n  &:link {\n    text-decoration: none;\n  }\n`;\n\nconst StyledPrevIcon = styled(GrPrevious)<IconsProps>`\n  polyline {\n    stroke: ${({ $isDisabled, theme }) =>\n      $isDisabled ? theme.colors.grey : theme.colors.primaryColor};\n  }\n`;\n\nconst StyledDeleteIcon = styled(MdOutlineDelete).attrs({\n  style: {\n    ...baseIconStyles,\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nconst StyledEditIcon = styled(BiEdit).attrs({\n  style: {\n    ...baseIconStyles,\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n`;\n\nconst StyledEditTextIcon = styled(MdEdit).attrs({\n  style: {\n    width: '80%',\n    height: '80%',\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n`;\n\nconst StyledConfirmIcon = styled(FiCheck).attrs({\n  style: {\n    ...baseIconStyles,\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.primaryColor};\n  }\n`;\n\nconst StyledCloseIcon = styled(MdClose).attrs({\n  style: {\n    ...baseIconStyles,\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nconst selectorStyles: StylesConfig<\n  string | SelectOptions,\n  boolean,\n  GroupBase<SelectOptions>\n> = {\n  control: (base, { isFocused }) => ({\n    ...base,\n    outline: 'none',\n    border: isFocused\n      ? `1px solid ${defaultTheme.colors.primaryColor}`\n      : `1px solid ${defaultTheme.colors.grey}`,\n    borderRadius: '3px',\n    color: `${defaultTheme.colors.grey}`,\n    boxShadow: isFocused ? `0px 10px 13px rgba(0, 0, 0, 0.07)` : 'none',\n    transition: `${defaultTheme.effects.transition}`,\n    '&:hover': {\n      border: `1px solid ${defaultTheme.colors.primaryColor}`,\n    },\n  }),\n};\n\nexport {\n  MainWrapper,\n  Title,\n  FormWrapper,\n  FormHeader,\n  Form,\n  FormDescriptionWrapper,\n  FormDescriptionText,\n  LinkWrapper,\n  StyledLink,\n  StyledPrevIcon,\n  StyledDeleteIcon,\n  StyledEditIcon,\n  StyledEditTextIcon,\n  StyledConfirmIcon,\n  StyledCloseIcon,\n  selectorStyles,\n};\n"],"names":["AuthForm","keyPrefix","isLoadingAuth","onSubmit","location","useLocation","useTranslation","t","i18n","user","useAppSelector","getUser","useForm","mode","reValidateMode","defaultValues","defaultUserFormValues","register","handleSubmit","clearErrors","errors","formState","trigger","isFormValid","Object","values","every","error","message","useEffect","keys","language","noValidate","autoComplete","pathname","type","name","placeholderText","disabled","pattern","value","nameValidation","minLength","count","required","formTextFields","map","textfield","id","memo","Wrapper","styled","InputWrapper","StyledInput","theme","colors","grey","fonts","text","fontSizes","effects","transition","primaryColor","smallText","PasswordButton","transparent","hoverOpacity","Label","InputErrorText","smallNoteText","red","Input","maxLength","useState","isPasswordShown","setPasswordShown","onChange","onClick","prev","defaultProps","undefined","Container","ProtectedTitle","props","h3","h4","children","getLoggedIn","navigate","useNavigate","authUser","getAuthUser","isErrorNotificationPopupOpen","getErrorNotificationPopupOpen","dispatch","useAppDispatch","useEditUserByIdMutation","editUserById","isLoadingEditUser","isLoading","isSuccessEditUser","isSuccess","isErrorEditUser","isError","editUserErrorMessage","useCallback","formValues","_id","body","setErrorNotificationPopupOpen","EditProfilePage","useEditUser","ProtectedRoute","Button","width","animation","backButtonAnimation","backgroundColor","defaultTheme","callback","$isDisabled","to","Loader","PopupNotification","isPopupShown","setPopupShown","baseIconStyles","height","MainWrapper","Title","fontsWeight","bold","h2","title","FormWrapper","backgroundGrey","FormHeader","Form","FormDescriptionWrapper","FormDescriptionText","LinkWrapper","StyledLink","Link","StyledPrevIcon","GrPrevious","StyledDeleteIcon","MdOutlineDelete","attrs","style","$color","StyledEditIcon","BiEdit","StyledEditTextIcon","MdEdit","StyledConfirmIcon","FiCheck","StyledCloseIcon","MdClose","selectorStyles","control","base","isFocused","outline","border","borderRadius","color","boxShadow"],"sourceRoot":""}