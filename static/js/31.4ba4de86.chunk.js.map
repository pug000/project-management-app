{"version":3,"file":"static/js/31.4ba4de86.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.tsx","components/Input/Input.style.tsx","components/Input/Input.tsx","hooks/useSignUpUser.ts","pages/SignUpPage/SignUpPage.tsx","redux/api/authApiSlice.ts","styles/styles.tsx"],"sourcesContent":["import React, { memo, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\n\nimport { useAppSelector } from 'hooks/useRedux';\n\nimport { getUser } from 'redux/selectors/userSelectors';\n\nimport Button from 'components/Button/Button';\nimport Input from 'components/Input/Input';\n\nimport { defaultUserFormValues, formTextFields, nameValidation } from 'utils/constants';\n\nimport { UserFormValues } from 'ts/interfaces';\n\nimport { Form } from 'styles/styles';\n\ninterface AuthFormProps {\n  keyPrefix: string;\n  onSubmit: SubmitHandler<UserFormValues>;\n  isLoadingAuth: boolean;\n}\n\nfunction AuthForm({ keyPrefix, isLoadingAuth, onSubmit }: AuthFormProps) {\n  const location = useLocation();\n  const { t, i18n } = useTranslation('translation');\n  const user = useAppSelector(getUser);\n  const {\n    register,\n    handleSubmit,\n    clearErrors,\n    formState: { errors },\n    trigger,\n  } = useForm<UserFormValues>({\n    mode: 'onSubmit',\n    reValidateMode: 'onSubmit',\n    defaultValues: user ?? defaultUserFormValues,\n  });\n  const isFormValid = Object.values(errors).every((error) => !error?.message);\n\n  useEffect(() => {\n    if (errors) {\n      trigger([...(Object.keys(errors) as (keyof UserFormValues)[])]);\n    }\n  }, [i18n.language, errors]);\n\n  return (\n    <Form\n      aria-label=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      {location.pathname !== '/signin' && (\n        <Input<UserFormValues>\n          type=\"text\"\n          name=\"name\"\n          register={register}\n          clearErrors={clearErrors}\n          errors={errors.name}\n          placeholderText={t('authorization.name')}\n          disabled={isLoadingAuth}\n          pattern={{\n            value: nameValidation,\n            message: t('authorization.namePattern'),\n          }}\n          minLength={{\n            value: 3,\n            message: t('authorization.nameMinLength', { count: 3 }),\n          }}\n          required={t('authorization.required', { value: t('authorization.name') })}\n        />\n      )}\n      {formTextFields.slice(1).map((textfield) => (\n        <Input<UserFormValues>\n          key={textfield.id}\n          type={textfield.type}\n          name={textfield.name}\n          placeholderText={t(textfield.placeholderText)}\n          required={t(textfield.required, {\n            value: t(textfield.placeholderText),\n          })}\n          pattern={{\n            ...textfield.pattern,\n            message: t(textfield.pattern.message),\n          }}\n          minLength={{\n            ...textfield.minLength,\n            message: t(textfield.minLength.message, {\n              count: textfield.minLength.value,\n              value: t(textfield.placeholderText),\n            }),\n          }}\n          disabled={isLoadingAuth}\n          errors={errors[textfield.name]}\n          register={register}\n          clearErrors={clearErrors}\n        />\n      ))}\n      <Button type=\"submit\" disabled={isLoadingAuth || !isFormValid}>\n        {t(`${keyPrefix}.text`)}\n      </Button>\n    </Form>\n  );\n}\n\nexport default memo(AuthForm);\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  width: 100%;\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 10px;\n  outline: none;\n  border: 1px solid;\n  border-radius: 3px;\n  border-color: ${({ theme }) => theme.colors.grey};\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-weight: 400;\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.primaryColor};\n    box-shadow: 0px 10px 13px rgba(0, 0, 0, 0.07);\n  }\n\n  &:focus ~ label,\n  &:valid ~ label,\n  &:disabled ~ label {\n    transform: translateX(-10px) translateY(-32px);\n    font-size: ${({ theme }) => theme.fontSizes.smallText};\n    color: ${({ theme }) => theme.colors.text};\n  }\n`;\n\nconst PasswordButton = styled.button.attrs({\n  type: 'button',\n})`\n  position: absolute;\n  border: none;\n  outline: none;\n  background-color: ${({ theme }) => theme.colors.transparent};\n  width: 30px;\n  right: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n\n  svg {\n    width: 100%;\n    height: 100%;\n    color: ${({ theme }) => theme.colors.grey};\n  }\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: 1px;\n  left: 1px;\n  padding: 10px;\n  display: inline-block;\n  color: ${({ theme }) => theme.colors.grey};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  transition: ${({ theme }) => theme.effects.transition};\n  pointer-events: none;\n`;\n\nconst InputErrorText = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.smallNoteText};\n  color: ${({ theme }) => theme.colors.red};\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  text-align: end;\n  min-height: 16px;\n`;\n\nexport { Wrapper, InputWrapper, StyledInput, PasswordButton, Label, InputErrorText };\n","import React, { useState } from 'react';\n\nimport {\n  FieldError,\n  FieldValues,\n  Path,\n  UseFormClearErrors,\n  UseFormRegister,\n  ValidationRule,\n} from 'react-hook-form';\n\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\n\nimport {\n  InputWrapper,\n  Label,\n  StyledInput,\n  InputErrorText,\n  Wrapper,\n  PasswordButton,\n} from './Input.style';\n\ninterface InputProps<T extends FieldValues> {\n  type: string;\n  placeholderText?: string;\n  name: Path<T>;\n  minLength?: ValidationRule<number>;\n  maxLength?: ValidationRule<number>;\n  required?: string;\n  pattern?: ValidationRule<RegExp>;\n  errors?: FieldError;\n  disabled?: boolean;\n  register: UseFormRegister<T>;\n  clearErrors: UseFormClearErrors<T>;\n}\n\nfunction Input<T extends FieldValues>({\n  type,\n  placeholderText,\n  name,\n  minLength,\n  maxLength,\n  required,\n  pattern,\n  errors,\n  disabled,\n  register,\n  clearErrors,\n}: InputProps<T>) {\n  const [isPasswordShown, setPasswordShown] = useState(false);\n\n  const renderPasswordButton = () => {\n    if (name !== 'password') {\n      return null;\n    }\n\n    return (\n      <PasswordButton onClick={() => setPasswordShown((prev) => !prev)}>\n        {isPasswordShown ? <AiOutlineEyeInvisible /> : <AiOutlineEye />}\n      </PasswordButton>\n    );\n  };\n\n  const togglePasswordInputType = () => {\n    if (name !== 'password') {\n      return type;\n    }\n\n    return isPasswordShown ? 'text' : 'password';\n  };\n\n  return (\n    <Wrapper>\n      <InputWrapper>\n        <StyledInput\n          type={togglePasswordInputType()}\n          required\n          id={name}\n          disabled={disabled}\n          {...register(name, {\n            required,\n            minLength,\n            maxLength,\n            pattern,\n            onChange: () => errors && clearErrors(name),\n          })}\n        />\n        <Label>{placeholderText}</Label>\n        {renderPasswordButton()}\n      </InputWrapper>\n      <InputErrorText>{errors?.message}</InputErrorText>\n    </Wrapper>\n  );\n}\n\nInput.defaultProps = {\n  placeholderText: '',\n  errors: undefined,\n  disabled: false,\n  maxLength: undefined,\n  minLength: undefined,\n  required: undefined,\n  pattern: undefined,\n};\n\nexport default Input;\n","import { useState, useCallback, useEffect } from 'react';\nimport { SubmitHandler } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useSignInMutation, useSignUpMutation } from 'redux/api/authApiSlice';\nimport {\n  getAuthUser,\n  getErrorNotificationPopupOpen,\n  getLoggedIn,\n  getUser,\n} from 'redux/selectors/userSelectors';\nimport { setErrorNotificationPopupOpen, setLoggedIn } from 'redux/slices/userSlice';\n\nimport { UserFormValues } from 'ts/interfaces';\n\nimport { useAppDispatch, useAppSelector } from './useRedux';\n\nconst useSignUpUser = () => {\n  const user = useAppSelector(getUser);\n  const isErrorNotificationPopupOpen = useAppSelector(getErrorNotificationPopupOpen);\n  const authUser = useAppSelector(getAuthUser);\n  const isLoggedIn = useAppSelector(getLoggedIn);\n  const [isLoadingAuth, setLoadingAuth] = useState(false);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const [\n    signUp,\n    { isLoading: isLoadingSignUp, isError: isErrorSignUp, error: signUpErrorMessage },\n  ] = useSignUpMutation();\n  const [signIn, { isLoading: isLoadingSignIn, isSuccess: isSuccessSignIn }] =\n    useSignInMutation();\n\n  const onSubmit: SubmitHandler<UserFormValues> = useCallback(async (formValues) => {\n    await signUp(formValues);\n  }, []);\n\n  const signInUser = useCallback(async () => {\n    if (user) {\n      const { name, ...data } = user;\n      await signIn(data);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    signInUser();\n  }, [user]);\n\n  useEffect(() => {\n    if (authUser) {\n      dispatch(setLoggedIn(true));\n    }\n  }, [authUser]);\n\n  useEffect(() => {\n    if (isErrorSignUp) {\n      dispatch(setErrorNotificationPopupOpen(true));\n    }\n  }, [isErrorSignUp]);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/projects');\n    }\n  }, [isLoggedIn]);\n\n  useEffect(() => {\n    if (isLoadingSignIn || isLoadingSignUp) {\n      setLoadingAuth(true);\n    }\n\n    if (isErrorSignUp || isSuccessSignIn) {\n      setLoadingAuth(false);\n    }\n  }, [isLoadingSignIn, isLoadingSignUp, isErrorSignUp, isSuccessSignIn]);\n\n  return {\n    isErrorNotificationPopupOpen,\n    isLoadingAuth,\n    signUpErrorMessage,\n    onSubmit,\n  };\n};\n\nexport default useSignUpUser;\n","import React, { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\n\nimport { backButtonAnimation } from 'utils/animations';\n\nimport useSignUpUser from 'hooks/useSignUpUser';\n\nimport AuthForm from 'components/AuthForm/AuthForm';\nimport Button from 'components/Button/Button';\nimport Loader from 'components/Loader/Loader';\nimport PopupNotification from 'components/PopupNotification/PopupNotification';\n\nimport {\n  FormDescriptionWrapper,\n  FormDescriptionText,\n  FormWrapper,\n  MainWrapper,\n  StyledLink,\n  Title,\n  FormHeader,\n  StyledPrevIcon,\n  LinkWrapper,\n} from 'styles/styles';\nimport defaultTheme from 'styles/theme';\nimport { setErrorNotificationPopupOpen } from 'redux/slices/userSlice';\n\nfunction SignUpPage() {\n  const navigate = useNavigate();\n  const { t } = useTranslation('translation');\n  const { isErrorNotificationPopupOpen, isLoadingAuth, signUpErrorMessage, onSubmit } =\n    useSignUpUser();\n\n  return (\n    <MainWrapper>\n      <FormWrapper>\n        <FormHeader>\n          <Button\n            type=\"button\"\n            width=\"30px\"\n            animation={backButtonAnimation}\n            backgroundColor={defaultTheme.colors.transparent}\n            disabled={isLoadingAuth}\n            callback={() => navigate(-1)}\n          >\n            <StyledPrevIcon $isDisabled={isLoadingAuth} />\n          </Button>\n        </FormHeader>\n        <Title>{t('signUp.title')}</Title>\n        <AuthForm keyPrefix=\"signUp\" onSubmit={onSubmit} isLoadingAuth={isLoadingAuth} />\n        <FormDescriptionWrapper>\n          <FormDescriptionText>{t('other.or')}</FormDescriptionText>\n        </FormDescriptionWrapper>\n        <LinkWrapper>\n          <StyledLink to=\"/signin\">{t('signUp.account')}</StyledLink>\n        </LinkWrapper>\n      </FormWrapper>\n      {isLoadingAuth && <Loader />}\n      {signUpErrorMessage && (\n        <PopupNotification\n          isPopupShown={isErrorNotificationPopupOpen}\n          setPopupShown={setErrorNotificationPopupOpen}\n          text={t(`${signUpErrorMessage}`)}\n          backgroundColor={defaultTheme.colors.pink}\n        />\n      )}\n    </MainWrapper>\n  );\n}\n\nexport default memo(SignUpPage);\n","import { addFetchOptions, parseJwt } from 'utils/functions';\n\nimport { Endpoints, Methods } from 'ts/enums';\nimport { AuthUser, User, UserData } from 'ts/interfaces';\n\nimport { setAuthUser, setUser } from 'redux/slices/userSlice';\nimport apiSlice from './apiSlice';\n\nconst authApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    signUp: builder.mutation<User, User>({\n      query: (body: User) => ({\n        ...addFetchOptions(`${Endpoints.signUp}`, Methods.post),\n        body,\n        headers: {\n          'Content-type': 'application/json',\n          accept: 'application/json',\n        },\n      }),\n      onQueryStarted: async (arg, { dispatch, queryFulfilled }) => {\n        try {\n          await queryFulfilled;\n          dispatch(setUser(arg));\n        } catch (error) {\n          if (error instanceof Error) {\n            throw error;\n          }\n        }\n      },\n      transformResponse: ({ _id, ...data }: UserData) => data,\n      transformErrorResponse: ({ status }): string =>\n        status === 409 ? 'signUp.error' : 'authorization.error',\n    }),\n\n    signIn: builder.mutation<AuthUser, User>({\n      query: (body: User) => ({\n        ...addFetchOptions(`${Endpoints.signIn}`, Methods.post),\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body,\n      }),\n      onQueryStarted: async (_, { dispatch, queryFulfilled }) => {\n        try {\n          dispatch(setAuthUser((await queryFulfilled).data));\n        } catch (error) {\n          if (error instanceof Error) {\n            throw error;\n          }\n        }\n      },\n      transformResponse: ({ token }: Pick<AuthUser, 'token'>) => ({\n        token,\n        ...parseJwt(token),\n      }),\n      transformErrorResponse: ({ status }): string =>\n        status === 401 ? 'signIn.error' : 'authorization.error',\n    }),\n  }),\n});\n\nexport const { useSignInMutation, useSignUpMutation } = authApiSlice;\n","import { GrPrevious } from 'react-icons/gr';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { StylesConfig, GroupBase } from 'react-select';\n\nimport { MdOutlineDelete, MdClose, MdEdit } from 'react-icons/md';\nimport { BiEdit } from 'react-icons/bi';\nimport { FiCheck } from 'react-icons/fi';\n\nimport { ColorProps, IconsProps, SelectOptions } from 'ts/interfaces';\n\nimport defaultTheme from './theme';\n\nconst baseIconStyles = {\n  width: '100%',\n  height: '100%',\n};\n\nconst MainWrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nconst Title = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-weight: ${({ theme }) => theme.fontsWeight.bold};\n  font-size: ${({ theme }) => theme.fontSizes.h2};\n  color: ${({ theme }) => theme.colors.title};\n  margin-bottom: 10px;\n  text-align: center;\n\n  @media (max-width: 500px) {\n    font-size: ${({ theme }) => theme.fontSizes.h4};\n  }\n`;\n\nconst FormWrapper = styled.div`\n  max-width: 450px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  background-color: ${({ theme }) => theme.colors.backgroundGrey};\n  padding: 20px;\n  border-radius: 10px;\n`;\n\nconst FormHeader = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px;\n  gap: 25px;\n  width: 100%;\n`;\n\nconst FormDescriptionWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  white-space: nowrap;\n  border: 0px;\n  gap: 10px;\n\n  &:before {\n    position: relative;\n    width: 100%;\n    border-top: thin solid rgba(0, 0, 0, 0.12);\n    content: '';\n    transform: translateY(50%);\n  }\n\n  &:after {\n    position: relative;\n    width: 100%;\n    border-top: thin solid rgba(0, 0, 0, 0.12);\n    content: '';\n    transform: translateY(50%);\n  }\n`;\n\nconst FormDescriptionText = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst LinkWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 60%;\n`;\n\nconst StyledLink = styled(Link)`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ theme }) => theme.colors.text};\n  transition: ${({ theme }) => theme.effects.transition};\n  line-height: 25px;\n  text-align: center;\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n\n  &:link {\n    text-decoration: none;\n  }\n`;\n\nconst StyledPrevIcon = styled(GrPrevious)<IconsProps>`\n  polyline {\n    stroke: ${({ $isDisabled, theme }) =>\n      $isDisabled ? theme.colors.grey : theme.colors.primaryColor};\n  }\n`;\n\nconst StyledDeleteIcon = styled(MdOutlineDelete).attrs({\n  style: {\n    ...baseIconStyles,\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nconst StyledEditIcon = styled(BiEdit).attrs({\n  style: {\n    ...baseIconStyles,\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n`;\n\nconst StyledEditTextIcon = styled(MdEdit).attrs({\n  style: {\n    width: '80%',\n    height: '80%',\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n`;\n\nconst StyledConfirmIcon = styled(FiCheck).attrs({\n  style: {\n    ...baseIconStyles,\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.primaryColor};\n  }\n`;\n\nconst StyledCloseIcon = styled(MdClose).attrs({\n  style: {\n    ...baseIconStyles,\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nconst selectorStyles: StylesConfig<\n  string | SelectOptions,\n  boolean,\n  GroupBase<SelectOptions>\n> = {\n  control: (base, { isFocused }) => ({\n    ...base,\n    outline: 'none',\n    border: isFocused\n      ? `1px solid ${defaultTheme.colors.primaryColor}`\n      : `1px solid ${defaultTheme.colors.grey}`,\n    borderRadius: '3px',\n    color: `${defaultTheme.colors.grey}`,\n    boxShadow: isFocused ? `0px 10px 13px rgba(0, 0, 0, 0.07)` : 'none',\n    transition: `${defaultTheme.effects.transition}`,\n    '&:hover': {\n      border: `1px solid ${defaultTheme.colors.primaryColor}`,\n    },\n  }),\n};\n\nexport {\n  MainWrapper,\n  Title,\n  FormWrapper,\n  FormHeader,\n  Form,\n  FormDescriptionWrapper,\n  FormDescriptionText,\n  LinkWrapper,\n  StyledLink,\n  StyledPrevIcon,\n  StyledDeleteIcon,\n  StyledEditIcon,\n  StyledEditTextIcon,\n  StyledConfirmIcon,\n  StyledCloseIcon,\n  selectorStyles,\n};\n"],"names":["AuthForm","keyPrefix","isLoadingAuth","onSubmit","location","useLocation","useTranslation","t","i18n","user","useAppSelector","getUser","useForm","mode","reValidateMode","defaultValues","defaultUserFormValues","register","handleSubmit","clearErrors","errors","formState","trigger","isFormValid","Object","values","every","error","message","useEffect","keys","language","noValidate","autoComplete","pathname","type","name","placeholderText","disabled","pattern","value","nameValidation","minLength","count","required","formTextFields","map","textfield","id","memo","Wrapper","styled","InputWrapper","StyledInput","theme","colors","grey","fonts","text","fontSizes","effects","transition","primaryColor","smallText","PasswordButton","transparent","hoverOpacity","Label","InputErrorText","smallNoteText","red","Input","maxLength","useState","isPasswordShown","setPasswordShown","onChange","onClick","prev","defaultProps","undefined","isErrorNotificationPopupOpen","getErrorNotificationPopupOpen","authUser","getAuthUser","isLoggedIn","getLoggedIn","setLoadingAuth","dispatch","useAppDispatch","navigate","useNavigate","useSignUpMutation","signUp","isLoadingSignUp","isLoading","isErrorSignUp","isError","signUpErrorMessage","useSignInMutation","signIn","isLoadingSignIn","isSuccessSignIn","isSuccess","useCallback","formValues","signInUser","data","setLoggedIn","setErrorNotificationPopupOpen","SignUpPage","useSignUpUser","Button","width","animation","backButtonAnimation","backgroundColor","defaultTheme","callback","$isDisabled","to","Loader","PopupNotification","isPopupShown","setPopupShown","authApiSlice","apiSlice","endpoints","builder","mutation","query","body","addFetchOptions","Endpoints","Methods","headers","accept","onQueryStarted","arg","queryFulfilled","setUser","Error","transformResponse","_id","transformErrorResponse","status","_","setAuthUser","token","parseJwt","baseIconStyles","height","MainWrapper","Title","fontsWeight","bold","h2","title","h4","FormWrapper","backgroundGrey","FormHeader","Form","FormDescriptionWrapper","FormDescriptionText","LinkWrapper","StyledLink","Link","StyledPrevIcon","GrPrevious","StyledDeleteIcon","MdOutlineDelete","attrs","style","$color","StyledEditIcon","BiEdit","StyledEditTextIcon","MdEdit","StyledConfirmIcon","FiCheck","StyledCloseIcon","MdClose","selectorStyles","control","base","isFocused","outline","border","borderRadius","color","boxShadow"],"sourceRoot":""}