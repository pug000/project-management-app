{"version":3,"file":"static/js/390.0956e60f.chunk.js","mappings":"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","sources":["components/Input/Input.style.tsx","components/Input/Input.tsx","components/NoResultsContainer/NoResultsContainer.style.tsx","components/NoResultsContainer/NoResultsContainer.tsx","hooks/useGetAllUsers.ts","components/Textarea/Textarea.style.tsx","components/Textarea/Textarea.tsx","components/RadioInput/RadioInput.style.tsx","components/RadioInput/RadioInput.tsx","components/PopupWithForm/EditForm/EditForm.tsx","components/PopupWithForm/PopupWithForm.style.tsx","components/PopupWithForm/PopupWithForm.tsx","hooks/useDeleteProject.ts","redux/api/projectsApiSlice.ts","redux/selectors/projectSelectors.ts","styles/styles.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  width: 100%;\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 10px;\n  outline: none;\n  border: 1px solid;\n  border-radius: 3px;\n  border-color: ${({ theme }) => theme.colors.grey};\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-weight: 400;\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.primaryColor};\n    box-shadow: 0px 10px 13px rgba(0, 0, 0, 0.07);\n  }\n\n  &:focus ~ label,\n  &:valid ~ label,\n  &:disabled ~ label {\n    transform: translateX(-10px) translateY(-32px);\n    font-size: ${({ theme }) => theme.fontSizes.smallText};\n    color: ${({ theme }) => theme.colors.text};\n  }\n`;\n\nconst PasswordButton = styled.button.attrs({\n  type: 'button',\n})`\n  position: absolute;\n  border: none;\n  outline: none;\n  background-color: ${({ theme }) => theme.colors.transparent};\n  width: 30px;\n  right: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n\n  svg {\n    width: 100%;\n    height: 100%;\n    color: ${({ theme }) => theme.colors.grey};\n  }\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: 1px;\n  left: 1px;\n  padding: 10px;\n  display: inline-block;\n  color: ${({ theme }) => theme.colors.grey};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  transition: ${({ theme }) => theme.effects.transition};\n  pointer-events: none;\n`;\n\nconst InputErrorText = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.smallNoteText};\n  color: ${({ theme }) => theme.colors.red};\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  text-align: end;\n  min-height: 16px;\n`;\n\nexport { Wrapper, InputWrapper, StyledInput, PasswordButton, Label, InputErrorText };\n","import React, { useState } from 'react';\n\nimport {\n  FieldError,\n  FieldValues,\n  Path,\n  UseFormClearErrors,\n  UseFormRegister,\n  ValidationRule,\n} from 'react-hook-form';\n\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\n\nimport {\n  InputWrapper,\n  Label,\n  StyledInput,\n  InputErrorText,\n  Wrapper,\n  PasswordButton,\n} from './Input.style';\n\ninterface InputProps<T extends FieldValues> {\n  type: string;\n  placeholderText?: string;\n  name: Path<T>;\n  minLength?: ValidationRule<number>;\n  maxLength?: ValidationRule<number>;\n  required?: string;\n  pattern?: ValidationRule<RegExp>;\n  errors?: FieldError;\n  disabled?: boolean;\n  register: UseFormRegister<T>;\n  clearErrors: UseFormClearErrors<T>;\n}\n\nfunction Input<T extends FieldValues>({\n  type,\n  placeholderText,\n  name,\n  minLength,\n  maxLength,\n  required,\n  pattern,\n  errors,\n  disabled,\n  register,\n  clearErrors,\n}: InputProps<T>) {\n  const [isPasswordShown, setPasswordShown] = useState(false);\n\n  const renderPasswordButton = () => {\n    if (name !== 'password') {\n      return null;\n    }\n\n    return (\n      <PasswordButton onClick={() => setPasswordShown((prev) => !prev)}>\n        {isPasswordShown ? <AiOutlineEyeInvisible /> : <AiOutlineEye />}\n      </PasswordButton>\n    );\n  };\n\n  const togglePasswordInputType = () => {\n    if (name !== 'password') {\n      return type;\n    }\n\n    return isPasswordShown ? 'text' : 'password';\n  };\n\n  return (\n    <Wrapper>\n      <InputWrapper>\n        <StyledInput\n          type={togglePasswordInputType()}\n          required\n          id={name}\n          disabled={disabled}\n          {...register(name, {\n            required,\n            minLength,\n            maxLength,\n            pattern,\n            onChange: () => errors && clearErrors(name),\n          })}\n        />\n        <Label>{placeholderText}</Label>\n        {renderPasswordButton()}\n      </InputWrapper>\n      <InputErrorText>{errors?.message}</InputErrorText>\n    </Wrapper>\n  );\n}\n\nInput.defaultProps = {\n  placeholderText: '',\n  errors: undefined,\n  disabled: false,\n  maxLength: undefined,\n  minLength: undefined,\n  required: undefined,\n  pattern: undefined,\n};\n\nexport default Input;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  opacity: 0.4;\n\n  Button {\n    text-decoration: underline;\n  }\n`;\n\nconst Title = styled.h4`\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-weight: ${({ theme }) => theme.fontsWeight.regular};\n  font-size: ${({ theme }) => theme.fontSizes.h4};\n  color: ${({ theme }) => theme.colors.grey};\n  text-align: center;\n`;\n\nexport { Container, Title };\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ActionCreatorWithPayload } from '@reduxjs/toolkit/dist/createAction';\n\nimport { useAppDispatch } from 'hooks/useRedux';\n\nimport defaultTheme from 'styles/theme';\n\nimport Button from 'components/Button/Button';\n\nimport { Container, Title } from './NoResultsContainer.style';\n\ninterface NoResultsProps {\n  text: string;\n  buttonText: string;\n  setPopupShown: ActionCreatorWithPayload<boolean>;\n}\n\nfunction NoResultsContainer({ text, buttonText, setPopupShown }: NoResultsProps) {\n  const { t } = useTranslation('translation');\n  const dispatch = useAppDispatch();\n\n  return (\n    <Container>\n      <Title>{t(`${text}`)}</Title>\n      <Button\n        type=\"button\"\n        backgroundColor={defaultTheme.colors.transparent}\n        color={defaultTheme.colors.grey}\n        callback={() => dispatch(setPopupShown(true))}\n      >\n        {t(`${buttonText}`)}\n      </Button>\n    </Container>\n  );\n}\n\nexport default NoResultsContainer;\n","import { useEffect, useState } from 'react';\nimport { useGetAllUsersQuery } from 'redux/api/userApiSlice';\nimport { getLoggedIn } from 'redux/selectors/userSelectors';\n\nimport { SelectOptions } from 'ts/interfaces';\nimport { defaultSelectOptions } from 'utils/constants';\n\nimport { useAppSelector } from './useRedux';\n\nconst useGetAllUsers = () => {\n  const isLoggedIn = useAppSelector(getLoggedIn);\n  const { data: users, isFetching: isUsersListLoading } = useGetAllUsersQuery(undefined, {\n    skip: !isLoggedIn,\n  });\n\n  const [usersList, setUsersList] = useState<SelectOptions[]>(defaultSelectOptions);\n\n  useEffect(() => {\n    if (!isUsersListLoading && users) {\n      const usersOptions = users?.map((user) => ({\n        value: user.name ?? '',\n        label: user.name ?? '',\n      }));\n      setUsersList(usersOptions);\n    }\n  }, [users]);\n\n  return {\n    usersList,\n    isUsersListLoading,\n  };\n};\n\nexport default useGetAllUsers;\n","import styled from 'styled-components';\n\nconst TextareaWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  gap: 5px;\n`;\n\nconst StyledTextarea = styled.textarea`\n  width: 100%;\n  min-height: 155px;\n  max-height: 300px;\n  resize: vertical;\n  display: block;\n  padding: 5px;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  font-family: ${({ theme }) => theme.fonts.text};\n  border-radius: 3px;\n  border: solid 1px ${({ theme }) => theme.colors.grey};\n  outline: none;\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:focus {\n    border: solid 1px ${({ theme }) => theme.colors.primaryColor};\n    box-shadow: 0px 10px 13px rgba(0, 0, 0, 0.07);\n  }\n\n  &:focus ~ label,\n  &:valid ~ label,\n  &:disabled ~ label {\n    transform: translateX(-10px) translateY(-32px);\n    font-size: ${({ theme }) => theme.fontSizes.smallText};\n    color: ${({ theme }) => theme.colors.text};\n  }\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: 1px;\n  left: 1px;\n  padding: 10px;\n  display: inline-block;\n  color: ${({ theme }) => theme.colors.grey};\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  transition: ${({ theme }) => theme.effects.transition};\n  pointer-events: none;\n`;\n\nconst TextareaErrorText = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.smallNoteText};\n  color: ${({ theme }) => theme.colors.red};\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  text-align: end;\n  min-height: 16px;\n`;\n\nexport { TextareaWrapper, Label, StyledTextarea, TextareaErrorText };\n","import React from 'react';\nimport {\n  FieldError,\n  FieldValues,\n  Path,\n  UseFormClearErrors,\n  UseFormRegister,\n  ValidationRule,\n} from 'react-hook-form';\n\nimport {\n  StyledTextarea,\n  TextareaErrorText,\n  Label,\n  TextareaWrapper,\n} from './Textarea.style';\n\ninterface TextareaProps<T extends FieldValues> {\n  name: Path<T>;\n  placeholderText?: string;\n  disabled?: boolean;\n  required?: string;\n  pattern?: ValidationRule<RegExp>;\n  minLength?: ValidationRule<number>;\n  maxLength?: ValidationRule<number>;\n  errors?: FieldError;\n  register: UseFormRegister<T>;\n  clearErrors: UseFormClearErrors<T>;\n}\n\nfunction Textarea<T extends FieldValues>({\n  name,\n  placeholderText,\n  disabled,\n  required,\n  pattern,\n  minLength,\n  maxLength,\n  errors,\n  register,\n  clearErrors,\n}: TextareaProps<T>) {\n  return (\n    <TextareaWrapper>\n      <StyledTextarea\n        id={name}\n        disabled={disabled}\n        required\n        {...register(name, {\n          required,\n          pattern,\n          minLength,\n          maxLength,\n          onChange: () => errors && clearErrors(name),\n        })}\n      />\n      <Label htmlFor={name}>{placeholderText}</Label>\n      <TextareaErrorText>{errors?.message}</TextareaErrorText>\n    </TextareaWrapper>\n  );\n}\n\nTextarea.defaultProps = {\n  placeholderText: '',\n  disabled: false,\n  required: undefined,\n  pattern: undefined,\n  minLength: undefined,\n  maxLength: undefined,\n  errors: undefined,\n};\n\nexport default Textarea;\n","import styled from 'styled-components';\n\nimport { BackgroundColorProps } from 'ts/interfaces';\n\nconst RadioInputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nconst Label = styled.label`\n  font-size: ${({ theme }) => theme.fontSizes.smallText};\n  color: ${({ theme }) => theme.colors.grey};\n`;\n\nconst RadioInputWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-self: center;\n  gap: 10px;\n`;\n\nconst RadioInputSpan = styled.span`\n  color: ${({ theme }) => theme.colors.white};\n  font-size: ${({ theme }) => theme.fontSizes.h4};\n  transition: ${({ theme }) => theme.effects.transition};\n  opacity: 0;\n`;\n\nconst RadioInputLabel = styled.label<BackgroundColorProps>`\n  cursor: pointer;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ $backgroundColor, theme }) =>\n    $backgroundColor ?? theme.colors.primaryColor};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    box-shadow: 0px 10px 13px rgba(0, 0, 0, 0.07);\n  }\n`;\n\nconst StyledRadioInput = styled.input`\n  display: none;\n\n  &:checked + ${RadioInputSpan} {\n    opacity: 1;\n  }\n`;\n\nconst InputErrorText = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.smallNoteText};\n  color: ${({ theme }) => theme.colors.red};\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  text-align: end;\n  min-height: 16px;\n`;\n\nexport {\n  RadioInputContainer,\n  RadioInputWrapper,\n  RadioInputLabel,\n  RadioInputSpan,\n  StyledRadioInput,\n  Label,\n  InputErrorText,\n};\n","import React from 'react';\nimport { FieldError, FieldValues, Path, UseFormRegister } from 'react-hook-form';\n\nimport { RadioInputItem } from 'ts/interfaces';\n\nimport {\n  InputErrorText,\n  Label,\n  RadioInputContainer,\n  RadioInputLabel,\n  RadioInputSpan,\n  RadioInputWrapper,\n  StyledRadioInput,\n} from './RadioInput.style';\n\ninterface RadioInputProps<T extends FieldValues> {\n  radioInputs: RadioInputItem[];\n  name: Path<T>;\n  text?: string;\n  required?: string;\n  errors?: FieldError;\n  defaultValue: string;\n  register: UseFormRegister<T>;\n}\n\nfunction RadioInput<T extends FieldValues>({\n  radioInputs,\n  name,\n  text,\n  required,\n  errors,\n  defaultValue,\n  register,\n}: RadioInputProps<T>) {\n  return (\n    <RadioInputContainer>\n      <Label>{text}</Label>\n      <RadioInputWrapper>\n        {radioInputs.map(({ id, value, checked }) => (\n          <RadioInputLabel key={id} htmlFor={id} $backgroundColor={value}>\n            <StyledRadioInput\n              type=\"radio\"\n              value={value}\n              defaultChecked={defaultValue === value ? !!defaultValue : checked}\n              id={id}\n              {...register(name, {\n                required,\n              })}\n            />\n            <RadioInputSpan>&#10004;</RadioInputSpan>\n          </RadioInputLabel>\n        ))}\n      </RadioInputWrapper>\n      <InputErrorText>{errors?.message}</InputErrorText>\n    </RadioInputContainer>\n  );\n}\n\nRadioInput.defaultProps = {\n  text: '',\n  required: undefined,\n  errors: undefined,\n};\n\nexport default RadioInput;\n","import React, { memo, useEffect } from 'react';\nimport { Controller, SubmitHandler, useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useParams } from 'react-router-dom';\nimport ReactSelect from 'react-select';\n\nimport useGetAllUsers from 'hooks/useGetAllUsers';\n\nimport Button from 'components/Button/Button';\nimport Input from 'components/Input/Input';\nimport Textarea from 'components/Textarea/Textarea';\nimport RadioInput from 'components/RadioInput/RadioInput';\n\nimport { defaultFormItemValues, radioInputList } from 'utils/constants';\n\nimport { EditFormValues, SelectOptions } from 'ts/interfaces';\n\nimport { Form, selectorStyles } from 'styles/styles';\n\ninterface EditFormProps<T> {\n  keyPrefix: string;\n  onSubmit: SubmitHandler<EditFormValues>;\n  selectedItem?: T | null;\n  maxDescriptionLength: number;\n}\n\nfunction EditForm<T>({\n  keyPrefix,\n  onSubmit,\n  selectedItem,\n  maxDescriptionLength,\n}: EditFormProps<T>) {\n  const { t, i18n } = useTranslation('translation');\n  const { id } = useParams();\n  const { pathname } = useLocation();\n  const { usersList, isUsersListLoading } = useGetAllUsers();\n  const {\n    register,\n    handleSubmit,\n    clearErrors,\n    trigger,\n    setFocus,\n    getValues,\n    formState: { errors, isSubmitted },\n    control,\n  } = useForm<EditFormValues>({\n    mode: 'onSubmit',\n    reValidateMode: 'onSubmit',\n    defaultValues: selectedItem ?? defaultFormItemValues,\n  });\n  const isFormValid = Object.values(errors).every((error) => !error?.message);\n\n  const getValueFromOption = (value: string) =>\n    value ? usersList.find((user) => user.value === value) : '';\n\n  useEffect(() => {\n    if (isSubmitted) {\n      trigger(['title', 'description']);\n    }\n  }, [i18n.language, isSubmitted]);\n\n  useEffect(() => {\n    setFocus('title');\n  }, []);\n\n  return (\n    <Form\n      aria-label=\"form\"\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <Input\n        type=\"text\"\n        name=\"title\"\n        register={register}\n        clearErrors={clearErrors}\n        errors={errors.title}\n        placeholderText={t(`${keyPrefix}.title`)}\n        minLength={{\n          value: 3,\n          message: t('editForm.titleMinLength'),\n        }}\n        maxLength={{\n          value: 25,\n          message: t('editForm.titleMaxLength'),\n        }}\n        required={t('editForm.required')}\n      />\n      <Textarea\n        name=\"description\"\n        register={register}\n        clearErrors={clearErrors}\n        errors={errors.description}\n        placeholderText={t(`${keyPrefix}.description`)}\n        maxLength={{\n          value: maxDescriptionLength,\n          message: t(`${keyPrefix}.descriptionMaxLength`),\n        }}\n      />\n      {pathname === `/projects/${id}` && (\n        <>\n          <RadioInput\n            name=\"color\"\n            text={t('editForm.color')}\n            radioInputs={radioInputList}\n            register={register}\n            defaultValue={getValues().color}\n          />\n          <Controller\n            control={control}\n            name=\"responsibleUser\"\n            render={({ field: { onChange, value } }) => (\n              <ReactSelect\n                isLoading={isUsersListLoading}\n                options={usersList}\n                placeholder={t('editForm.responsible')}\n                value={getValueFromOption(value)}\n                onChange={(newValue) => onChange((newValue as SelectOptions).value)}\n                styles={selectorStyles}\n              />\n            )}\n          />\n        </>\n      )}\n      <Button type=\"submit\" disabled={!isFormValid}>\n        {t('editForm.button')}\n      </Button>\n    </Form>\n  );\n}\n\nEditForm.defaultProps = {\n  selectedItem: null,\n};\n\nexport default memo(EditForm);\n","import { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nimport { VariantsProps } from 'ts/interfaces';\n\nconst PopupWrapper = styled(motion.div).attrs<VariantsProps>(({ $variants }) => ({\n  initial: 'initial',\n  animate: 'animate',\n  exit: 'exit',\n  variants: $variants,\n}))<VariantsProps>`\n  position: fixed;\n  display: flex;\n  z-index: 15;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Background = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 15;\n  backdrop-filter: blur(2px);\n`;\n\nconst Popup = styled.div`\n  max-width: 500px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundBlue};\n  padding: 25px;\n  margin: -10% 10px 0;\n  border-radius: 7px;\n  z-index: 3;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  position: relative;\n  z-index: 20;\n`;\n\nconst PopupTitle = styled.h3`\n  font-family: ${({ theme }) => theme.fonts.title};\n  font-weight: ${({ theme }) => theme.fontsWeight.medium};\n  font-size: ${({ theme }) => theme.fontSizes.h4};\n  color: ${({ theme }) => theme.colors.title};\n  align-self: flex-start;\n  padding: 10px 20px;\n`;\n\nconst CloseButtonWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  svg {\n    color: ${({ theme }) => theme.colors.primaryColor};\n  }\n`;\n\nexport { PopupWrapper, Background, Popup, PopupTitle, CloseButtonWrapper };\n","import React, { useCallback } from 'react';\nimport { AnimatePresence } from 'framer-motion';\nimport { ActionCreatorWithPayload } from '@reduxjs/toolkit/dist/createAction';\nimport { useTranslation } from 'react-i18next';\nimport { SubmitHandler } from 'react-hook-form';\n\nimport { useAppDispatch } from 'hooks/useRedux';\nimport useGetAllUsers from 'hooks/useGetAllUsers';\n\nimport { popupAnimation } from 'utils/animations';\n\nimport { EditFormValues } from 'ts/interfaces';\n\nimport defaultTheme from 'styles/theme';\n\nimport { MdClose } from 'react-icons/md';\n\nimport Button from 'components/Button/Button';\nimport EditForm from './EditForm/EditForm';\n\nimport {\n  Background,\n  Popup,\n  PopupTitle,\n  CloseButtonWrapper,\n  PopupWrapper,\n} from './PopupWithForm.style';\n\ninterface PopupWithFormProps<T> {\n  isPopupShown: boolean;\n  setPopupShown: ActionCreatorWithPayload<boolean>;\n  keyPrefix: string;\n  formTitleText: string;\n  onSubmit: SubmitHandler<EditFormValues>;\n  selectedItem?: T | null;\n  setSelectedItem?: ActionCreatorWithPayload<T | null>;\n  maxDescriptionLength: number;\n}\n\nfunction PopupWithForm<T>({\n  isPopupShown,\n  setPopupShown,\n  keyPrefix,\n  formTitleText,\n  onSubmit,\n  selectedItem,\n  setSelectedItem,\n  maxDescriptionLength,\n}: PopupWithFormProps<T>) {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation('translation', { keyPrefix });\n  const { isUsersListLoading } = useGetAllUsers();\n\n  const closePopup = useCallback(() => {\n    dispatch(setPopupShown(false));\n    if (selectedItem && setSelectedItem) {\n      dispatch(setSelectedItem(null));\n    }\n  }, []);\n\n  return (\n    <AnimatePresence>\n      {isPopupShown && !isUsersListLoading && (\n        <PopupWrapper $variants={popupAnimation}>\n          <Background onClick={closePopup} />\n          <Popup>\n            <PopupTitle>{t(`${formTitleText}`)}</PopupTitle>\n            <EditForm\n              keyPrefix={keyPrefix}\n              onSubmit={onSubmit}\n              selectedItem={selectedItem}\n              maxDescriptionLength={maxDescriptionLength}\n            />\n            <CloseButtonWrapper>\n              <Button\n                type=\"button\"\n                width=\"30px\"\n                backgroundColor={defaultTheme.colors.transparent}\n                callback={closePopup}\n              >\n                <MdClose />\n              </Button>\n            </CloseButtonWrapper>\n          </Popup>\n        </PopupWrapper>\n      )}\n    </AnimatePresence>\n  );\n}\n\nPopupWithForm.defaultProps = {\n  selectedItem: null,\n  setSelectedItem: undefined,\n};\n\nexport default PopupWithForm;\n","import { useCallback, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { useDeleteProjectByIdMutation } from 'redux/api/projectsApiSlice';\nimport { getDeleteProjectPopupOpen } from 'redux/selectors/projectSelectors';\nimport { setDeleteProjectPopupOpen, setSelectedProject } from 'redux/slices/projectSlice';\n\nimport { Project } from 'ts/interfaces';\n\nimport { useAppSelector, useAppDispatch } from './useRedux';\n\nconst useDeleteProject = (selectedProject: Project | null | undefined) => {\n  const isDeleteProjectPopupOpen = useAppSelector(getDeleteProjectPopupOpen);\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const dispatch = useAppDispatch();\n  const [deleteProjectById, { isLoading: isLoadingDeleteProject }] =\n    useDeleteProjectByIdMutation();\n\n  const deleteProject = useCallback(async () => {\n    if (selectedProject) {\n      dispatch(setDeleteProjectPopupOpen(false));\n      dispatch(setSelectedProject(null));\n      await deleteProjectById(selectedProject._id);\n\n      if (pathname === `/projects/${selectedProject?._id}`) {\n        navigate('/projects');\n      }\n    }\n  }, [selectedProject]);\n\n  useEffect(\n    () => () => {\n      if (isDeleteProjectPopupOpen) {\n        dispatch(setDeleteProjectPopupOpen(false));\n        dispatch(setSelectedProject(null));\n      }\n    },\n    []\n  );\n\n  return {\n    isLoadingDeleteProject,\n    isDeleteProjectPopupOpen,\n    deleteProject,\n    navigate,\n  };\n};\n\nexport default useDeleteProject;\n","import {\n  setCreateProjectPopupOpen,\n  setEditProjectPopupOpen,\n} from 'redux/slices/projectSlice';\nimport { RootState } from 'redux/store';\n\nimport { addFetchOptions } from 'utils/functions';\n\nimport { Endpoints, Methods } from 'ts/enums';\nimport { Project, ProjectData } from 'ts/interfaces';\n\nimport apiSlice from './apiSlice';\n\ntype OmitProjectData = Omit<ProjectData, '_id'>;\n\nconst projectsApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    getAllProjects: builder.query<Project[], void>({\n      query: () => addFetchOptions(`${Endpoints.boards}`, Methods.get),\n      transformResponse: (projects: ProjectData[]) =>\n        projects.map(({ title, ...data }) => ({\n          ...data,\n          ...JSON.parse(title),\n        })),\n      onQueryStarted: async (_, { dispatch, queryFulfilled, getState }) => {\n        try {\n          const { isCreateProjectPopupOpen, isEditProjectPopupOpen } = (\n            getState() as RootState\n          ).project;\n          await queryFulfilled;\n          if (isCreateProjectPopupOpen) {\n            dispatch(setCreateProjectPopupOpen(false));\n          } else if (isEditProjectPopupOpen) {\n            dispatch(setEditProjectPopupOpen(false));\n          }\n        } catch (error) {\n          if (error instanceof Error) {\n            throw error;\n          }\n        }\n      },\n      providesTags: (result) =>\n        result\n          ? [\n              ...result.map(({ _id }) => ({ type: 'Project' as const, id: _id })),\n              'Project',\n            ]\n          : ['Project'],\n    }),\n\n    getProjectById: builder.query<Project, string>({\n      query: (id: string) => addFetchOptions(`${Endpoints.boards}${id}`, Methods.get),\n      transformResponse: (project: ProjectData) =>\n        project\n          ? {\n              ...project,\n              ...JSON.parse(project.title),\n            }\n          : undefined,\n      providesTags: ['Project'],\n    }),\n\n    createProject: builder.mutation<ProjectData, OmitProjectData>({\n      query: (body: OmitProjectData) => ({\n        ...addFetchOptions(`${Endpoints.boards}`, Methods.post),\n        body,\n      }),\n      invalidatesTags: ['Project'],\n    }),\n\n    updateProject: builder.mutation<ProjectData, ProjectData>({\n      query: ({ _id, ...body }: ProjectData) => ({\n        ...addFetchOptions(`${Endpoints.boards}${_id}`, Methods.put),\n        body,\n      }),\n      invalidatesTags: ['Project'],\n    }),\n\n    deleteProjectById: builder.mutation<ProjectData, string>({\n      query: (_id: string) =>\n        addFetchOptions(`${Endpoints.boards}${_id}`, Methods.delete),\n      invalidatesTags: ['Project'],\n    }),\n  }),\n});\n\nexport const {\n  useGetAllProjectsQuery,\n  useGetProjectByIdQuery,\n  useCreateProjectMutation,\n  useUpdateProjectMutation,\n  useDeleteProjectByIdMutation,\n} = projectsApiSlice;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { RootState } from 'redux/store';\n\nconst getBaseProjectState = (state: RootState) => state.project;\n\nconst getSelectedProject = createSelector(\n  getBaseProjectState,\n  (state) => state.selectedProject\n);\n\nconst getDeleteProjectPopupOpen = createSelector(\n  getBaseProjectState,\n  (state) => state.isDeleteProjectPopupOpen\n);\n\nconst getCreateProjectPopupOpen = createSelector(\n  getBaseProjectState,\n  (state) => state.isCreateProjectPopupOpen\n);\n\nconst getEditProjectPopupOpen = createSelector(\n  getBaseProjectState,\n  (state) => state.isEditProjectPopupOpen\n);\n\nconst getSearchedProjects = createSelector(\n  getBaseProjectState,\n  (state) => state.searchedProjects\n);\n\nexport {\n  getSelectedProject,\n  getDeleteProjectPopupOpen,\n  getCreateProjectPopupOpen,\n  getEditProjectPopupOpen,\n  getSearchedProjects,\n};\n","import { GrPrevious } from 'react-icons/gr';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { StylesConfig, GroupBase } from 'react-select';\n\nimport { MdOutlineDelete, MdClose, MdEdit } from 'react-icons/md';\nimport { BiEdit } from 'react-icons/bi';\nimport { FiCheck } from 'react-icons/fi';\n\nimport { ColorProps, IconsProps, SelectOptions } from 'ts/interfaces';\n\nimport defaultTheme from './theme';\n\nconst baseIconStyles = {\n  width: '100%',\n  height: '100%',\n};\n\nconst MainWrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nconst Title = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.text};\n  font-weight: ${({ theme }) => theme.fontsWeight.bold};\n  font-size: ${({ theme }) => theme.fontSizes.h2};\n  color: ${({ theme }) => theme.colors.title};\n  margin-bottom: 10px;\n  text-align: center;\n\n  @media (max-width: 500px) {\n    font-size: ${({ theme }) => theme.fontSizes.h4};\n  }\n`;\n\nconst FormWrapper = styled.div`\n  max-width: 450px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  background-color: ${({ theme }) => theme.colors.backgroundGrey};\n  padding: 20px;\n  border-radius: 10px;\n`;\n\nconst FormHeader = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px;\n  gap: 25px;\n  width: 100%;\n`;\n\nconst FormDescriptionWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  white-space: nowrap;\n  border: 0px;\n  gap: 10px;\n\n  &:before {\n    position: relative;\n    width: 100%;\n    border-top: thin solid rgba(0, 0, 0, 0.12);\n    content: '';\n    transform: translateY(50%);\n  }\n\n  &:after {\n    position: relative;\n    width: 100%;\n    border-top: thin solid rgba(0, 0, 0, 0.12);\n    content: '';\n    transform: translateY(50%);\n  }\n`;\n\nconst FormDescriptionText = styled.span`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst LinkWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 60%;\n`;\n\nconst StyledLink = styled(Link)`\n  font-size: ${({ theme }) => theme.fontSizes.text};\n  color: ${({ theme }) => theme.colors.text};\n  transition: ${({ theme }) => theme.effects.transition};\n  line-height: 25px;\n  text-align: center;\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n\n  &:link {\n    text-decoration: none;\n  }\n`;\n\nconst StyledPrevIcon = styled(GrPrevious)<IconsProps>`\n  polyline {\n    stroke: ${({ $isDisabled, theme }) =>\n      $isDisabled ? theme.colors.grey : theme.colors.primaryColor};\n  }\n`;\n\nconst StyledDeleteIcon = styled(MdOutlineDelete).attrs({\n  style: {\n    ...baseIconStyles,\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nconst StyledEditIcon = styled(BiEdit).attrs({\n  style: {\n    ...baseIconStyles,\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n`;\n\nconst StyledEditTextIcon = styled(MdEdit).attrs({\n  style: {\n    width: '80%',\n    height: '80%',\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    opacity: ${({ theme }) => theme.effects.hoverOpacity};\n  }\n`;\n\nconst StyledConfirmIcon = styled(FiCheck).attrs({\n  style: {\n    ...baseIconStyles,\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.primaryColor};\n  }\n`;\n\nconst StyledCloseIcon = styled(MdClose).attrs({\n  style: {\n    ...baseIconStyles,\n  },\n})<ColorProps>`\n  color: ${({ $color, theme }) => $color ?? theme.colors.grey};\n  transition: ${({ theme }) => theme.effects.transition};\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nconst selectorStyles: StylesConfig<\n  string | SelectOptions,\n  boolean,\n  GroupBase<SelectOptions>\n> = {\n  control: (base, { isFocused }) => ({\n    ...base,\n    outline: 'none',\n    border: isFocused\n      ? `1px solid ${defaultTheme.colors.primaryColor}`\n      : `1px solid ${defaultTheme.colors.grey}`,\n    borderRadius: '3px',\n    color: `${defaultTheme.colors.grey}`,\n    boxShadow: isFocused ? `0px 10px 13px rgba(0, 0, 0, 0.07)` : 'none',\n    transition: `${defaultTheme.effects.transition}`,\n    '&:hover': {\n      border: `1px solid ${defaultTheme.colors.primaryColor}`,\n    },\n  }),\n};\n\nexport {\n  MainWrapper,\n  Title,\n  FormWrapper,\n  FormHeader,\n  Form,\n  FormDescriptionWrapper,\n  FormDescriptionText,\n  LinkWrapper,\n  StyledLink,\n  StyledPrevIcon,\n  StyledDeleteIcon,\n  StyledEditIcon,\n  StyledEditTextIcon,\n  StyledConfirmIcon,\n  StyledCloseIcon,\n  selectorStyles,\n};\n"],"names":["Wrapper","styled","InputWrapper","StyledInput","theme","colors","grey","fonts","text","fontSizes","effects","transition","primaryColor","smallText","PasswordButton","type","transparent","hoverOpacity","Label","InputErrorText","smallNoteText","red","Input","placeholderText","name","minLength","maxLength","required","pattern","errors","disabled","register","clearErrors","useState","isPasswordShown","setPasswordShown","id","onChange","onClick","prev","message","defaultProps","undefined","Container","Title","fontsWeight","regular","h4","buttonText","setPopupShown","t","useTranslation","dispatch","useAppDispatch","Button","backgroundColor","defaultTheme","color","callback","isLoggedIn","useAppSelector","getLoggedIn","useGetAllUsersQuery","skip","users","data","isUsersListLoading","isFetching","defaultSelectOptions","usersList","setUsersList","useEffect","usersOptions","map","user","value","label","TextareaWrapper","StyledTextarea","TextareaErrorText","Textarea","htmlFor","RadioInputContainer","RadioInputWrapper","RadioInputSpan","white","RadioInputLabel","$backgroundColor","StyledRadioInput","RadioInput","radioInputs","defaultValue","checked","defaultChecked","EditForm","keyPrefix","onSubmit","selectedItem","maxDescriptionLength","i18n","useParams","pathname","useLocation","useGetAllUsers","useForm","mode","reValidateMode","defaultValues","defaultFormItemValues","handleSubmit","trigger","setFocus","getValues","formState","isSubmitted","control","isFormValid","Object","values","every","error","getValueFromOption","find","language","noValidate","autoComplete","title","description","radioInputList","render","field","isLoading","options","placeholder","newValue","styles","selectorStyles","memo","PopupWrapper","motion","attrs","initial","animate","exit","variants","$variants","Background","Popup","backgroundBlue","PopupTitle","medium","CloseButtonWrapper","PopupWithForm","isPopupShown","formTitleText","setSelectedItem","closePopup","useCallback","AnimatePresence","popupAnimation","width","selectedProject","isDeleteProjectPopupOpen","getDeleteProjectPopupOpen","navigate","useNavigate","useDeleteProjectByIdMutation","deleteProjectById","isLoadingDeleteProject","deleteProject","setDeleteProjectPopupOpen","setSelectedProject","_id","projectsApiSlice","apiSlice","endpoints","builder","getAllProjects","query","addFetchOptions","Endpoints","Methods","transformResponse","projects","JSON","parse","onQueryStarted","_","queryFulfilled","getState","project","isCreateProjectPopupOpen","isEditProjectPopupOpen","setCreateProjectPopupOpen","setEditProjectPopupOpen","Error","providesTags","result","getProjectById","createProject","mutation","body","invalidatesTags","updateProject","useGetAllProjectsQuery","useGetProjectByIdQuery","useCreateProjectMutation","useUpdateProjectMutation","getBaseProjectState","state","getSelectedProject","createSelector","getCreateProjectPopupOpen","getEditProjectPopupOpen","getSearchedProjects","searchedProjects","baseIconStyles","height","MainWrapper","bold","h2","FormWrapper","backgroundGrey","FormHeader","Form","FormDescriptionWrapper","FormDescriptionText","LinkWrapper","StyledLink","Link","StyledPrevIcon","GrPrevious","$isDisabled","StyledDeleteIcon","MdOutlineDelete","style","$color","StyledEditIcon","BiEdit","StyledEditTextIcon","MdEdit","StyledConfirmIcon","FiCheck","StyledCloseIcon","MdClose","base","isFocused","outline","border","borderRadius","boxShadow"],"sourceRoot":""}